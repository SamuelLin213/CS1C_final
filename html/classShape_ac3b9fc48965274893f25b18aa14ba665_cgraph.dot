digraph "Shape::~Shape"
{
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  rankdir="LR";
  Node1 [label="Shape::~Shape",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black"];
  Node1 -> Node2 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node2 [label="Shape::draw",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classShape.html#aff0b3b1b1d590e402984ef3ac1af58af",tooltip="Method draw: Class Shape  This method will draw a shape on the canvas. Returns nothing.  PRE-CONDITIONS <none> "];
  Node1 -> Node3 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3 [label="Shape::move",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classShape.html#a0c7a82671a877d363e2fb605269b98bf",tooltip="Method move: Class Shape  This method will move a shape on the canvas. Returns nothing.  PRE-CONDITIONS int[] - array of integers with new coordinates. "];
  Node1 -> Node4 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node4 [label="Shape::perimeter",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classShape.html#a0b248cd91257ea358010139220b12033",tooltip="Method perimeter: Class Shape  This virtual method will calculate the perimeter of a Shape..."];
  Node1 -> Node5 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node5 [label="Shape::area",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classShape.html#a097b919b44553b0cde97f4b5632c476e",tooltip="Method area: Class Shape  This virtual method will calculate the area of a Shape, which multiplies th..."];
  Node1 -> Node6 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node6 [label="Shape::operator==",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classShape.html#a7e8739a7d0d65392f71daddc7830a6c0"];
  Node1 -> Node7 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node7 [label="Shape::operator\<",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classShape.html#a45c5a74cc9c53d663c3363f388b0c498",tooltip="Method operator < : Class Shape  This method is an overloaded version of the operator <; the purpose ..."];
  Node1 -> Node8 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node8 [label="Shape::getPen",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classShape.html#ab3420c1972e190923410abcc36a1db78",tooltip="Method getPen: Class Shape  This method will return the QPen address of the calling shape..."];
  Node1 -> Node9 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node9 [label="Shape::getBrush",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classShape.html#a4fff90728217432c4510dbcdbf3cd9e6",tooltip="Method getBrush: Class Shape  This method will return the QBrush address of the calling shape..."];
  Node1 -> Node10 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node10 [label="Shape::getShape",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classShape.html#a558bed85fed8077108f17fe4c7ce38aa",tooltip="Method getShape: Class Shape  This method will return the ShapeType of the calling shape..."];
  Node1 -> Node11 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node11 [label="Shape::getDimensions",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classShape.html#a6ab7f82dd146b522b981fd5b5451f3dd",tooltip="Method getDimensions: Class Shape  This method will return the vector of ints which stores the dimens..."];
  Node1 -> Node12 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node12 [label="Shape::getPainter",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classShape.html#a754ef1fcea3fbe3c3612da480ba8dd75",tooltip="Method getPainter: Class Shape  This method will return the QPainter& of the calling shape..."];
  Node1 -> Node13 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node13 [label="Shape::getId",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classShape.html#ad24c5659cb3bdbeb8881b62a8402df98",tooltip="Method getId: Class Shape  This method will return the int id of the calling shape.  PRE-CONDITIONS <none> "];
  Node1 -> Node14 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node14 [label="Shape::setPen",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classShape.html#a83027240b45ec72e7d25c1e93044fa50",tooltip="Method setPen: Class Shape  This method will set the pen of the calling shape using parameter global ..."];
  Node1 -> Node15 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node15 [label="Shape::setBrush",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classShape.html#a2ec2004e468730778d28ec731c3ae099",tooltip="Method setBrush: Class Shape  This method will set the brush of the calling shape using parameter bru..."];
  Node1 -> Node16 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node16 [label="Shape::setShape",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classShape.html#a610d97f732d655186a3cafa63b6f19fb",tooltip="Method setShape: Class Shape  This method will set the type of shape using the parameter ShapeType  P..."];
  Node1 -> Node17 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node17 [label="Shape::addDimension",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classShape.html#a0ae38350ce72d80aa7ceea54c105645f",tooltip="Method addDimension: Class Shape  This method will add another dimension to the dimensions vector..."];
  Node1 -> Node18 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node18 [label="Shape::setColor",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classShape.html#a478ecffdafe9d8557dc6e21679f2cbdf",tooltip="Method setColor: Class Shape  This method will set the color of the shape. Returns nothing..."];
  Node1 -> Node19 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node19 [label="Shape::setWidth",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classShape.html#ab5baf6543b5b544fb7de14fbdeaf2b92",tooltip="Method setWidth: Class Shape  This method will set the width of the shape. Returns nothing..."];
  Node1 -> Node20 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node20 [label="Shape::setStyle",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classShape.html#afc308e043e7677973ccc068197e3bf6a",tooltip="Method setStyle: Class Shape  This method will set the pen style of the shape. Returns nothing..."];
  Node1 -> Node21 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node21 [label="Shape::setCapStyle",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classShape.html#a688def1f26c05e0deb01e011227d7db4",tooltip="Method setCapStyle: Class Shape  This method will set the cap style of the pen. Returns nothing..."];
  Node1 -> Node22 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node22 [label="Shape::setJoinStyle",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classShape.html#a600f414ebe5a1c1fcc41cf563eb7c014",tooltip="Method setJoinStyle: Class Shape  This method will set the join style of the pen. Returns nothing..."];
  Node1 -> Node23 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node23 [label="Shape::setBrushColor",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classShape.html#aad508aff38bf0edcf8dae0749ca98db9",tooltip="Method setBrushColor: Class Shape  This method will set the brush color. Returns nothing.  PRE-CONDITIONS QColor color - new color. "];
  Node1 -> Node24 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node24 [label="Shape::setBrushStyle",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classShape.html#a9d1d26c2a0d99e4560145e81782cc461",tooltip="Method setBrushStyle: Class Shape  This method will set the brush style. Returns nothing.  PRE-CONDITIONS Qt::BrushStyle style - new style. "];
  Node1 -> Node25 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node25 [label="Shape::Shape",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classShape.html#aaa8d87171e65e0d8ba3c5459978992a7",tooltip="Constructor Shape: Class Shape  Creates the default instance of the shape class.  PRE-CONDITIONS <non..."];
}
